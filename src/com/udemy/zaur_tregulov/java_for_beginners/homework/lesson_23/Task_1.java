package com.udemy.zaur_tregulov.java_for_beginners.homework.lesson_23;

/**
 * @author Siarhei Korbut
 * 1. Создать абстрактный класс с именем Animal. Конструктор этого класса
 * должен иметь параметр, значение которого назначается переменной String
 * name. Создать в этом классе абстрактные методы eat и sleep.
 * <p>
 * 2. Создать абстрактный класс с именем Fish, который является дочерним
 * классом класса Animal. Конструктор этого класса должен иметь параметр,
 * значение которого назначается переменным name данного и родительского
 * класса. В классе Fish перезаписать метод sleep так, чтобы он выводил в
 * консоль "Всегда интересно наблюдать, как спят рыбы!". Так же создать в
 * этом классе абстрактный метод swim.
 * <p>
 * 3. Создать абстрактный класс с именем Bird, который является дочерним
 * классом класса Animal. Конструктор этого класса должен иметь параметр,
 * значение которого назначается переменным name данного и родительского
 * класса. Создать в этом классе абстрактный метод fly.
 * <p>
 * 4. Создать абстрактный класс с именем Mammal, который является дочерним
 * классом класса Animal. Конструктор этого класса должен иметь параметр,
 * значение которого назначается переменным name данного и родительского
 * класса. Создать в этом классе абстрактный метод run.
 * <p>
 * 5. Создать интерфейс с названием Speakable. В нем создать дефолтный
 * метод speak, который выводит в консоль "Кто-то говорит!". Класс Mammal
 * должен имплементировать этот интерфейс. Класс Bird должен имплементировать
 * этот интерфейс и перезаписывать его метод так, чтобы он выводил в консоль
 * имя + "поёт".
 * <p>
 * 6. Создать класс с именем Xiphophorus (меченосец), который является
 * дочерним классом класса Fish. Конструктор этого класса должен иметь
 * параметр, значение которого назначается переменным name данного и
 * родительского класса. Перезаписать в этом классе метод swim так, чтобы
 * он выводил в консоль "Меченосец красивая рыба, которая быстро плавает!".
 * Так же перезаписать метод eat так, чтобы он выводил в консоль "Меченосец
 * не хищная рыба, она ест обычный рыбий корм".
 * <p>
 * 7. Создать класс с именем Penguin, который является дочерним классом
 * класса Bird. Конструктор этого класса должен иметь параметр, значение
 * которого назначается переменным name данного и родительского класса.
 * Перезаписать в этом классе метод eat так, чтобы он выводил в консоль
 * "Пингвины любят есть рыбу!". Так же перезаписать метод sleep
 * так, чтобы он выводил в консоль "Пингвины спят прижавшись друг к другу!".
 * Так же перезаписать метод fly так, чтобы он выводил в консоль "Пингвины
 * не умеют летать!". Так же перезаписать метод speak так, чтобы он выводил
 * в консоль "Пингвины не умеют петь как соловьи!".
 * <p>
 * 8. Создать класс с именем Lion, который является дочерним классом класса
 * Mammal. Конструктор этого класса должен иметь параметр, значение
 * которого назначается переменным name данного и родительского класса.
 * Перезаписать в этом классе метод eat так, чтобы он выводил в консоль
 * "Лев, как любой хищник, любит мясо!". Так же перезаписать метод sleep
 * так, чтобы он выводил в консоль "Большую часть дня, лев спит!". Так же
 * перезаписать метод run так, чтобы он выводил в консоль "Лев - это не
 * самая быстрая кошка!".
 * <p>
 * 9. В классе Task_1 создать метод main в котором:
 * <p>
 * 9.1 Создать экземпляр класса Xiphophorus (меченосец), на который ссылается
 * переменная типа Xiphophorus. Вывести в консоль переменную name данного
 * экземпляра и вызвать все методы, которые можно вызвать с помощью данной
 * переменной.
 * <p>
 * 9.2 Создать экземпляр класса Penguin, на который ссылается переменная
 * типа Speakable, вызвать все методы которые возможно вызвать с помощью
 * данной переменной.
 * <p>
 * 9.3 Создать экземпляр класса Lion, на который ссылается переменная
 * типа Animal. Вывести в консоль переменную name данного экземпляра и вызвать
 * все методы, которые возможно вызвать с помощью данной переменной.
 * <p>
 * 9.4 Создать ещё один экземпляр класса Lion, на который ссылается переменная
 * типа Mammal. Вывести в консоль переменную name данного экземпляра и вызвать
 * все методы, которые возможно вызвать с помощью данной переменной.
 */

public class Task_1 {
    public static void main(String[] args) {

        Xiphophorus xiphophorus = new Xiphophorus("Жорж");
        System.out.println(xiphophorus.name);
        xiphophorus.eat();
        xiphophorus.swim();
        xiphophorus.sleep();

        Speakable penguin = new Penguin("Артурчик");
        penguin.speak();

        Animal lion1 = new Lion("Уася");
        System.out.println(lion1.name);
        lion1.eat();
        lion1.sleep();

        Mammal lion2 = new Lion("Колян");
        System.out.println(lion2.name);
        lion2.run();
        lion2.eat();
        lion2.sleep();
        lion2.speak();
    }
}
